{"ast":null,"code":"var _jsxFileName = \"/Users/matthewcebenka/Documents/git/indecision-app/src/components/IndecisionApp.js\";\nimport React from \"react\";\nimport AddOption from \"./AddOption\";\nimport Action from \"./Action\";\nimport Header from \"./Header\";\nimport Options from \"./Options\";\nimport OptionModal from \"./OptionModal\";\nexport default class IndecisionApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      options: [],\n      selectedOption: undefined\n    };\n\n    this.handleDeleteOptions = () => {\n      this.setState(() => ({\n        options: []\n      }));\n    };\n\n    this.handleClearSelectedOption = () => {\n      this.setState(() => ({\n        selectedOption: undefined\n      }));\n    };\n\n    this.handleDeleteOption = optionToRemove => {\n      this.setState(prevState => ({\n        options: prevState.options.filter(option => optionToRemove !== option)\n      }));\n    };\n\n    this.handlePick = () => {\n      const randomNum = Math.floor(Math.random() * this.state.options.length);\n      const option = this.state.options[randomNum];\n      this.setState(() => ({\n        selectedOption: option\n      }));\n    };\n\n    this.handleAddOption = option => {\n      if (!option) {\n        return \"Enter valid value to add item\";\n      } else if (this.state.options.indexOf(option) > -1) {\n        return \"This option already exists\";\n      }\n\n      this.setState(prevState => ({\n        options: prevState.options.concat(option)\n      }));\n    };\n  }\n\n  componentDidMount() {\n    try {\n      const json = localStorage.getItem(\"options\");\n      const options = JSON.parse(json);\n\n      if (options) {\n        this.setState(() => ({\n          options\n        }));\n      }\n    } catch (e) {// Do nothing at all\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.options.length !== this.state.options.length) {\n      const json = JSON.stringify(this.state.options);\n      localStorage.setItem(\"options\", json);\n    }\n  }\n\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount\");\n  }\n\n  render() {\n    const subtitle = \"Put your life in the hands of a computer\";\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Header, {\n      subtitle: subtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Action, {\n      hasOptions: this.state.options.length > 0,\n      handlePick: this.handlePick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"widget\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Options, {\n      options: this.state.options,\n      handleDeleteOptions: this.handleDeleteOptions,\n      handleDeleteOption: this.handleDeleteOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(AddOption, {\n      handleAddOption: this.handleAddOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))), React.createElement(OptionModal, {\n      selectedOption: this.state.selectedOption,\n      handleClearSelectedOption: this.handleClearSelectedOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/matthewcebenka/Documents/git/indecision-app/src/components/IndecisionApp.js"],"names":["React","AddOption","Action","Header","Options","OptionModal","IndecisionApp","Component","state","options","selectedOption","undefined","handleDeleteOptions","setState","handleClearSelectedOption","handleDeleteOption","optionToRemove","prevState","filter","option","handlePick","randomNum","Math","floor","random","length","handleAddOption","indexOf","concat","componentDidMount","json","localStorage","getItem","JSON","parse","e","componentDidUpdate","prevProps","stringify","setItem","componentWillUnmount","console","log","render","subtitle"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AddOption from \"./AddOption\";\nimport Action from \"./Action\";\nimport Header from \"./Header\";\nimport Options from \"./Options\";\nimport OptionModal from \"./OptionModal\";\n\nexport default class IndecisionApp extends React.Component {\n  state = {\n    options: [],\n    selectedOption: undefined\n  };\n  handleDeleteOptions = () => {\n    this.setState(() => ({ options: [] }));\n  };\n  handleClearSelectedOption = () => {\n    this.setState(() => ({ selectedOption: undefined }));\n  };\n  handleDeleteOption = optionToRemove => {\n    this.setState(prevState => ({\n      options: prevState.options.filter(option => optionToRemove !== option)\n    }));\n  };\n  handlePick = () => {\n    const randomNum = Math.floor(Math.random() * this.state.options.length);\n    const option = this.state.options[randomNum];\n    this.setState(() => ({\n      selectedOption: option\n    }));\n  };\n  handleAddOption = option => {\n    if (!option) {\n      return \"Enter valid value to add item\";\n    } else if (this.state.options.indexOf(option) > -1) {\n      return \"This option already exists\";\n    }\n\n    this.setState(prevState => ({\n      options: prevState.options.concat(option)\n    }));\n  };\n  componentDidMount() {\n    try {\n      const json = localStorage.getItem(\"options\");\n      const options = JSON.parse(json);\n\n      if (options) {\n        this.setState(() => ({ options }));\n      }\n    } catch (e) {\n      // Do nothing at all\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.options.length !== this.state.options.length) {\n      const json = JSON.stringify(this.state.options);\n      localStorage.setItem(\"options\", json);\n    }\n  }\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount\");\n  }\n  render() {\n    const subtitle = \"Put your life in the hands of a computer\";\n\n    return (\n      <div>\n        <Header subtitle={subtitle} />\n        <div className=\"container\">\n          <Action\n            hasOptions={this.state.options.length > 0}\n            handlePick={this.handlePick}\n          />\n          <div className=\"widget\">\n            <Options\n              options={this.state.options}\n              handleDeleteOptions={this.handleDeleteOptions}\n              handleDeleteOption={this.handleDeleteOption}\n            />\n            <AddOption handleAddOption={this.handleAddOption} />\n          </div>\n        </div>\n        <OptionModal\n          selectedOption={this.state.selectedOption}\n          handleClearSelectedOption={this.handleClearSelectedOption}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}